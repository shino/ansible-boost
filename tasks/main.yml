---

- name: Install dependencies
  apt: name={{ item }} state=installed update_cache=yes
  sudo: yes
  with_items:
    - build-essential
    - python-dev
    - libbz2-dev
  when: ansible_os_family == "Debian"

- name: Install dependencies
  yum: name={{ item }} state=latest
  sudo: yes
  with_items:
    - python-devel
    - gcc
    - gcc-c++
    - kernel-devel
    - bzip2-devel
  when: ansible_os_family == "RedHat"

- name: Cleanup work directory
  sudo: yes
  file: path={{ boost_work_dir }} state=absent
- name: Cleanup prefix directory
  sudo: yes
  file: path={{ boost_prefix }} state=absent
  when: boost_prefix is defined

- name: Create work directory
  file: path={{ boost_work_dir }} state=directory

- name: Create install directory
  sudo: yes
  file: path={{ boost_prefix }} state=directory
  when: boost_prefix is defined

- name: Get boost source
  get_url: url='http://sourceforge.net/projects/boost/files/boost/{{ boost_version }}/{{ boost_tar_name }}/download' dest={{ boost_work_dir }}

- name: Unpack tarball
  command: /bin/tar jxfv {{ boost_work_dir }}/{{ boost_tar_name }} -C {{ boost_work_dir }}

- name: Bootstrap Boost
  command: chdir={{ boost_work_dir }}/{{ boost_build_dir }} ./bootstrap.sh {{ boost_bootstrap_opt }}
  when: boost_prefix is not defined

- name: Bootstrap Boost
  command: chdir={{ boost_work_dir }}/{{ boost_build_dir }} ./bootstrap.sh --prefix={{ boost_prefix }} {{ boost_bootstrap_opt }}
  when: boost_prefix is defined

- name: Make & Insall Boost
  sudo: yes
  command: chdir={{ boost_work_dir }}/{{ boost_build_dir }} ./b2 {{ boost_make_opt }} install
  register: install
- debug: msg="{{ make.stdout_lines }}"

